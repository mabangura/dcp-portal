import type { NextRequest } from 'next/server';function targetFromEnv(s:'importer'|'cleaner'|'integrations'){const k={importer:'IMPORTER_INTERNAL_HOSTPORT',cleaner:'CLEANER_INTERNAL_HOSTPORT',integrations:'INTEGRATIONS_INTERNAL_HOSTPORT'}[s];const hp=process.env[k as keyof NodeJS.ProcessEnv] as string|undefined;if(!hp) throw new Error(`${k} not set`);return `http://${hp}`;}export async function proxyFetch(req:NextRequest, s:'importer'|'cleaner'|'integrations', sub:string){const url=new URL(req.url);const target=`${targetFromEnv(s)}${sub}${url.search||''}`;const init:RequestInit={method:req.method,headers:Object.fromEntries(req.headers),body:req.body?await req.blob():undefined,redirect:'manual'};const res=await fetch(target,init);const body=await res.arrayBuffer();return new Response(body,{status:res.status,headers:res.headers});}